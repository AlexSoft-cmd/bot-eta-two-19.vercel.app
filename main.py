import asyncio
import logging
import json

from aiogram import Bot, Dispatcher, types
from aiogram.filters import CommandStart, CommandObject

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ---
# –í–∞—à —Ç–æ–∫–µ–Ω –æ—Ç @BotFather
API_TOKEN = "7977339121:AAEybX7kfWMzQXMnsZhjLUunsyMra1vsly8" 

# ‚úÖ –í–ê–®–ê –ù–ê–°–¢–û–Ø–©–ê–Ø –°–°–´–õ–ö–ê –ù–ê MINI APP
MINIAPP_URL = "https://bot-eta-two-19.vercel.app"

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ ---
dp = Dispatcher()
bot = Bot(token=API_TOKEN)


# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ---
@dp.message(CommandStart())
async def send_welcome(message: types.Message, command: CommandObject):
    lang = command.args
    
    if lang and lang.lower().strip() == "en":
        text = "Welcome! Click the button below to open the order form."
        button_text = "üõí Open Mini App"
    else:
        text = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å —Ñ–æ—Ä–º—É –∑–∞–∫–∞–∑–∞."
        button_text = "üõí –û—Ç–∫—Ä—ã—Ç—å Mini App"

    kb = types.InlineKeyboardMarkup(
        inline_keyboard=[
            [types.InlineKeyboardButton(text=button_text, web_app=types.WebAppInfo(url=MINIAPP_URL))]
        ]
    )
    await message.answer(text, reply_markup=kb)


@dp.message(lambda message: message.web_app_data)
async def webapp_handler(message: types.Message):
    try:
        data = json.loads(message.web_app_data.data)
        
        reply = f"""‚úÖ –ó–∞–∫–∞–∑ –ø–æ–ª—É—á–µ–Ω:
–ò–º—è: {data['name']}
Email: {data['email']}
–ü—Ä–æ–¥—É–∫—Ç: {data['product']}
–°—É–º–º–∞: {data['amount']} ILS

üí≥ –ü–ª–∞—Ç–µ–∂ (—ç–º—É–ª—è—Ü–∏—è): –ø—Ä–∏–Ω—è—Ç."""

        await message.answer(reply)
        
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Web App: {e}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö.")


# --- –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ ---
async def main():
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)


if __name__ == '__main__':
    logging.basicConfig(level=logging.INFO)
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é.")